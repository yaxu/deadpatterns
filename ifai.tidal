(note, [clapSpeed, clavesSpeed, agogoSpeed, crashSpeed, stutterTime, stutterDepth, tomDecay, clhatDecay, ophatDecay, hatGrain], stop) <- Beat.start
let sine128 = (floor . (* 128)) <$> sine1 :: Pattern Int

:t spread'

note $ slow 4 $ every 2 (slow 2) $ superimpose (density 2 . iter 8) $ spread' (iter) ("1 2 3" :: Pattern Int) $ "kick snare clhat hitom ophat lotom"

note $ "kick"

hatGrain $ slow 4 sine128

d2 $ jux (0.25 <~) $ every 2 (striate 4) $ sound "gabba sn:1*2"

d3 $ interlace (sound (pick <$> "{bd sn, bass:2*3 jvbass*2}" <*> (slow 3 "[5 2 3 5 2]*2"))
                  |+| speed "0.5")
  (sound "bd*4 bd*8 bd*5 bd*8")

d4 $ jux (iter 8) $ every 3 (rev) $ slow 16 $ striate 128 $ sound "bev*2"
  |+| shape "0.5"

bps $ 80/60



note $ superimpose (spread' (iter) ("2 3 5" :: Pattern Int)) $ "kick ~ ~ agogo*1"

agogoSpeed "[100 70 50 80]*4"

d1 $ jux rev $ slow 2 $ striate 16 $ sound "koy"

d2 $ jux (0.25 <~) $ every 4 (0.25 <~)$  sound "bd ~ [~ rm] drum:1 oc ~"

d1 $ striate 4 $ sound "[jvbass*2, amencutup/2] jvbass:3*4"
  |+| speed "[1 2 1.5]/4"
  |+| pan "0"

d2 $ iter 4 $ striate 3 $ sound "[jvbass*2, bass3:3 amencutup/2] jvbass:3*4"
  |+| speed "[0.5 1.5 2]/4"
  |+| pan "1"
  |+| shape "0.4"

d3 $ jux (iter 8) $ sound "drum newnotes bd newnotes:2"
  |+| speed "[0.5 2]/4"

d5 $ striate 4 $ sound "[kurt kurt:4, sn:2]"

note $ superimpose (iter 4) $ "kick [snare claves*2]/2"

d4 $ every 2 rev $ (jux rev $ sound "bd jvbass*3 sn:2 jvbass*4")
  |+| speed "[1 1.1 1.2]/3"